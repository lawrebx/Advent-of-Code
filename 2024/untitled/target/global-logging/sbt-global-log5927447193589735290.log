[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\brand\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\brand\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.6 (Oracle Corporation Java 22.0.2)
[debug] Load.defaultLoad until apply took 60.9012ms
[debug]           Load.loadUnit: plugins took 55.1792ms
[debug]           Load.loadUnit: defsScala took 0.2558ms
[debug] [Loading] Scanning directory C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled\project
[debug]             Load.loadUnit: mkEval took 4.1126ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.6763 ms
[info] loading settings for project untitled-build from idea.sbt...
[debug]               Load.resolveProject(untitled-build) took 32.8363ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled\project, plugins: List(<none>))) took 52.0614ms
[debug] [Loading] Done in C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1725.9927ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.8933ms
[debug]         Load.loadUnit(file:/C:/Users/brand/Documents/GitHub/Advent-of-Code/2024/untitled/project/, ...) took 1792.0867ms
[debug]       Load.apply: load took 1894.0156ms
[debug]       Load.apply: resolveProjects took 4.0344ms
[debug]       Load.apply: finalTransforms took 49.0665ms
[debug]       Load.apply: config.delegates took 5.6076ms
[debug]       Load.apply: Def.make(settings)... took 277.2822ms
[debug]       Load.apply: structureIndex took 66.9668ms
[debug]       Load.apply: mkStreams took 1.0546ms
[info] loading project definition from C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3820.5011ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled
[debug]       Load.loadUnit: mkEval took 0.175ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4079 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 19.0109ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled, plugins: List(<none>))) took 21.3059ms
[debug] [Loading] Done in C:\Users\brand\Documents\GitHub\Advent-of-Code\2024\untitled, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 732.8783ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.0523ms
[debug]   Load.loadUnit(file:/C:/Users/brand/Documents/GitHub/Advent-of-Code/2024/untitled/, ...) took 4569.6485ms
[debug] Load.apply: load took 4580.5516ms
[debug] Load.apply: resolveProjects took 0.0877ms
[debug] Load.apply: finalTransforms took 22.8152ms
[debug] Load.apply: config.delegates took 0.3003ms
[debug] Load.apply: Def.make(settings)... took 58.0197ms
[debug] Load.apply: structureIndex took 21.2221ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to untitled (in build file:/C:/Users/brand/Documents/GitHub/Advent-of-Code/2024/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52661 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52661, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled (in build file:/C:/Users/brand/Documents/GitHub/Advent-of-Code/2024/untitled/)
[debug] > Exec(idea-shell, None, None)
